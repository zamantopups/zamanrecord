<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cash Record Manager</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .message-box {
            display: none;
        }
        .message-box.show {
            display: block;
        }
        .balance-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
        }
        .balance-item .balance-amount {
            font-size: 1.5rem;
            font-weight: bold;
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <div id="app" class="max-w-xl mx-auto min-h-screen bg-white shadow-lg flex flex-col">
        
        <header class="bg-blue-900 text-white p-4 text-center">
            <h1 class="text-xl font-bold">Zaman Photcopy Cash Record</h1>
            <p class="text-sm opacity-80">Keep a record of your transactions.</p>
        </header>

        <main class="flex-grow p-4 sm:p-6 overflow-y-auto">
            
            <section id="login-section" class="bg-white p-6 rounded-xl shadow-md mb-6">
                <h2 class="text-lg font-semibold mb-4 text-center text-blue-900">Login to your account</h2>
                <form id="login-form" class="space-y-4">
                    <div>
                        <label for="password-input" class="block text-sm font-medium text-gray-700">Password</label>
                        <input type="password" id="password-input" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md p-2" placeholder="Enter your password">
                    </div>
                    <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Login
                    </button>
                </form>
            </section>
            <div id="login-message-box" class="message-box p-4 rounded-md text-sm mb-4"></div>

            <div id="app-content" class="hidden">
                <section class="bg-blue-600 text-white p-6 rounded-xl shadow-md mb-6">
                    <h2 class="text-lg font-semibold opacity-90 text-center">Current Balances</h2>
                    <div id="balance-container" class="grid grid-cols-2 gap-4 mt-4">
                        </div>
                </section>

                <section class="bg-white p-6 rounded-xl shadow-md mb-6">
                    <h2 class="text-lg font-semibold mb-4 text-center text-blue-900">New Transaction</h2>
                    <form id="transaction-form" class="space-y-4">
                        <div>
                            <label for="transaction-type-select" class="block text-sm font-medium text-gray-700">Transaction Type</label>
                            <select id="transaction-type-select" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 rounded-md">
                                <option value="cash-in">Cash-in</option>
                                <option value="cash-out">Cash-out</option>
                            </select>
                        </div>
                        <div>
                            <label for="account-select" class="block text-sm font-medium text-gray-700">Account</label>
                            <select id="account-select" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 rounded-md">
                                <option value="Faysal Bank">Faysal Bank</option>
                                <option value="EasyPaisa">EasyPaisa</option>
                                <option value="JazzCash">JazzCash</option>
                                <option value="Cash in Hand">Cash in Hand</option>
                            </select>
                        </div>
                        <div>
                            <label for="amount-input" class="block text-sm font-medium text-gray-700">Amount</label>
                            <input type="number" id="amount-input" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md p-2" placeholder="e.g., 5000">
                        </div>
                        <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Record Transaction
                        </button>
                    </form>
                </section>

                <div id="transaction-message-box" class="message-box p-4 rounded-md text-sm mb-4"></div>

                <section class="bg-white p-6 rounded-xl shadow-md mb-6">
                    <h2 class="text-lg font-semibold mb-4 text-center text-blue-900">All Transactions</h2>
                    <div id="transactions-list" class="space-y-4 overflow-y-auto max-h-80">
                    </div>
                </section>

                <section id="change-password-section" class="bg-white p-6 rounded-xl shadow-md">
                    <h2 class="text-lg font-semibold mb-4 text-center text-blue-900">Change Password</h2>
                    <form id="change-password-form" class="space-y-4">
                        <div>
                            <label for="current-password" class="block text-sm font-medium text-gray-700">Current Password</label>
                            <input type="password" id="current-password" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md p-2" placeholder="Enter current password">
                        </div>
                        <div>
                            <label for="new-password" class="block text-sm font-medium text-gray-700">New Password</label>
                            <input type="password" id="new-password" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md p-2" placeholder="Enter new password">
                        </div>
                        <div>
                            <label for="confirm-new-password" class="block text-sm font-medium text-gray-700">Confirm New Password</label>
                            <input type="password" id="confirm-new-password" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md p-2" placeholder="Confirm new password">
                        </div>
                        <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            Change Password
                        </button>
                    </form>
                </section>
                <div id="change-password-message-box" class="message-box p-4 rounded-md text-sm mt-4"></div>
            </div>
        </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const loginSection = document.getElementById('login-section');
            const loginForm = document.getElementById('login-form');
            const appContent = document.getElementById('app-content');
            const loginMessageBox = document.getElementById('login-message-box');
            
            const transactionForm = document.getElementById('transaction-form');
            const transactionsList = document.getElementById('transactions-list');
            const transactionMessageBox = document.getElementById('transaction-message-box');
            const balanceContainer = document.getElementById('balance-container');
            const changePasswordForm = document.getElementById('change-password-form');
            const changePasswordMessageBox = document.getElementById('change-password-message-box');

            let correctPassword = 'Zaman123456';
            let transactions = [];
            
            let balances = {
                'Faysal Bank': 0,
                'EasyPaisa': 0,
                'JazzCash': 0,
                'Cash in Hand': 0
            };
            
            const DATA_KEY = 'cashManagerAppData';

            function saveData() {
                const data = {
                    password: correctPassword,
                    transactions,
                    balances
                };
                localStorage.setItem(DATA_KEY, JSON.stringify(data));
            }

            function loadData() {
                const data = localStorage.getItem(DATA_KEY);
                if (data) {
                    const parsedData = JSON.parse(data);
                    correctPassword = parsedData.password;
                    transactions = parsedData.transactions;
                    balances = parsedData.balances;
                }
            }

            function updateBalance(account, amount) {
                if (balances.hasOwnProperty(account)) {
                    balances[account] += amount;
                }
                renderBalances();
                saveData();
            }

            function renderBalances() {
                balanceContainer.innerHTML = '';
                const accounts = Object.keys(balances);
                accounts.forEach(account => {
                    const balanceEl = document.createElement('div');
                    balanceEl.className = 'balance-item';
                    
                    const accountNameEl = document.createElement('h3');
                    accountNameEl.className = 'text-lg font-semibold opacity-90';
                    accountNameEl.textContent = account;
                    
                    const balanceAmountEl = document.createElement('p');
                    balanceAmountEl.className = 'balance-amount';
                    balanceAmountEl.textContent = `Rs. ${balances[account].toLocaleString()}`;
                    
                    balanceAmountEl.style.color = '#fff';

                    balanceEl.appendChild(accountNameEl);
                    balanceEl.appendChild(balanceAmountEl);
                    balanceContainer.appendChild(balanceEl);
                });
            }

            function displayMessage(message, type, messageBoxElement) {
                messageBoxElement.textContent = message;
                messageBoxElement.classList.remove('message-box', 'bg-red-100', 'text-red-700', 'bg-green-100', 'text-green-700');
                messageBoxElement.classList.add('show');
                if (type === 'success') {
                    messageBoxElement.classList.add('bg-green-100', 'text-green-700');
                } else if (type === 'error') {
                    messageBoxElement.classList.add('bg-red-100', 'text-red-700');
                }
                setTimeout(() => {
                    messageBoxElement.classList.remove('show');
                }, 3000);
            }

            function renderTransactions() {
                transactionsList.innerHTML = '';
                if (transactions.length === 0) {
                    transactionsList.innerHTML = '<p class="text-center text-gray-500">No transactions recorded yet.</p>';
                } else {
                    transactions.forEach((transaction, index) => {
                        const transactionElement = document.createElement('div');
                        transactionElement.className = 'bg-gray-50 p-4 rounded-lg flex justify-between items-center shadow-sm';
                        
                        const amountColor = transaction.type === 'cash-in' ? 'text-green-600' : 'text-red-600';
                        const amountSign = transaction.type === 'cash-in' ? '+' : '-';
                        
                        const detailsHtml = `
                            <div>
                                <h3 class="font-bold text-gray-900">${transaction.account}</h3>
                                <p class="text-sm text-gray-600">${transaction.type}</p>
                            </div>
                            <div class="text-right flex items-center space-x-2">
                                <span class="font-bold ${amountColor}">Rs. ${amountSign}${transaction.amount.toLocaleString()}</span>
                                <p class="text-xs text-gray-500">${new Date(transaction.timestamp).toLocaleString()}</p>
                                <button class="delete-btn text-red-500 hover:text-red-700 transition" data-index="${index}">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>
                                </button>
                            </div>
                        `;
                        transactionElement.innerHTML = detailsHtml;
                        transactionsList.prepend(transactionElement);
                    });
                }
            }

            // Event Listeners for Login, Transactions, and Password Change
            loginForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const enteredPassword = document.getElementById('password-input').value;
                
                if (enteredPassword === correctPassword) {
                    loginSection.classList.add('hidden');
                    appContent.classList.remove('hidden');
                    renderBalances();
                    renderTransactions();
                    saveData();
                } else {
                    displayMessage('Incorrect password. Please try again.', 'error', loginMessageBox);
                }
            });

            changePasswordForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const currentPassword = document.getElementById('current-password').value;
                const newPassword = document.getElementById('new-password').value;
                const confirmNewPassword = document.getElementById('confirm-new-password').value;

                if (currentPassword === '' || newPassword === '' || confirmNewPassword === '') {
                    displayMessage('All fields are required.', 'error', changePasswordMessageBox);
                    return;
                }

                if (currentPassword !== correctPassword) {
                    displayMessage('Incorrect current password.', 'error', changePasswordMessageBox);
                    return;
                }

                if (newPassword !== confirmNewPassword) {
                    displayMessage('New passwords do not match.', 'error', changePasswordMessageBox);
                    return;
                }

                correctPassword = newPassword;
                saveData();
                displayMessage('Password changed successfully!', 'success', changePasswordMessageBox);
                changePasswordForm.reset();
            });

            transactionForm.addEventListener('submit', (e) => {
                e.preventDefault();
                
                const type = document.getElementById('transaction-type-select').value;
                const account = document.getElementById('account-select').value;
                const amount = document.getElementById('amount-input').value;

                if (amount === '') {
                    displayMessage('Please enter an amount.', 'error', transactionMessageBox);
                    return;
                }

                const parsedAmount = parseInt(amount);
                let sign = type === 'cash-in' ? 1 : -1;
                updateBalance(account, sign * parsedAmount);

                const newTransaction = {
                    type,
                    account,
                    amount: parsedAmount,
                    timestamp: new Date().toISOString()
                };

                transactions.push(newTransaction);
                renderTransactions();
                displayMessage('Transaction recorded successfully!', 'success', transactionMessageBox);
                saveData();
                transactionForm.reset();
            });

            transactionsList.addEventListener('click', (e) => {
                if (e.target.closest('.delete-btn')) {
                    const btn = e.target.closest('.delete-btn');
                    const index = parseInt(btn.dataset.index);
                    const deletedTransaction = transactions[index];
                    let sign = deletedTransaction.type === 'cash-in' ? -1 : 1;
                    updateBalance(deletedTransaction.account, sign * deletedTransaction.amount);
                    transactions.splice(index, 1);
                    renderTransactions();
                    displayMessage('Transaction deleted.', 'success', transactionMessageBox);
                    saveData();
                }
            });
            
            loadData();
            if (localStorage.getItem(DATA_KEY)) {
                loginSection.classList.add('hidden');
                appContent.classList.remove('hidden');
                renderBalances();
                renderTransactions();
            }
        });
    </script>
</body>
</html>
